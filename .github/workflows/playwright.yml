name: Playwright-Python_Nuevo-Framework

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch: # Permite ejecutar el workflow manualmente
    inputs:
      environment:
        description: 'Selecciona el ambiente de ejecución (e.g., dev, staging)'
        required: true
        default: 'qa'
        type: choice
        options:
        - dev
        - staging
        - prod
        - qa
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13.7' # Asegúrate de que esta sea la versión de Python que usas
      - name: Instalar dependencias de Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt # Asegúrate de que pytest-playwright esté en requirements.txt
      - name: Instalar navegadores de Playwright
        run: playwright install --with-deps
      - name: Ejecutar pruebas de Playwright
        # Aquí se define la variable de entorno 'ENV' usando el input del workflow.
        # Tu código Python puede acceder a esta variable para cargar la configuración
        # específica del ambiente (ej. la URL base).
        env:
          ENV: ${{ github.event.inputs.environment }}
        run: |
          # El comando de pytest ahora se ejecuta en el ambiente seleccionado.
          # Asegúrate de que tu código Python lea la variable de entorno 'ENV'.
          pytest src/test/test_home.py src/test/test_registro.py src/test/test_login.py -n 4
        
      - name: Subir informe de pruebas de Playwright (para debugging o descarga)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-raw-report # El nombre del artefacto original, por si alguien quiere el nombre original
          path: reportes/html1/playwright_reporte.html # Ahora subimos el index.html renombrado
          retention-days: 30